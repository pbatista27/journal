{"version":3,"sources":["hooks/useForm.js","types/types.js","actions/uiAction.js","firebase/firebaseConfig.js","services/authService.js","actions/authAction.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","services/notesService.js","actions/notesAction.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PrivateRouter.js","routers/PublicRouter.js","components/ui/LoadingScreen.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","setError","error","type","payload","finishLoading","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loginEmailPasswordService","email","password","a","signInWithEmailAndPassword","user","console","log","Swal","fire","message","googleLoginService","signInWithPopup","registerUserWithEmailPasswordNameService","nombre","createUserWithEmailAndPassword","userCred","updateProfile","displayName","uid","loguotService","signOut","login","loguot","LoginScreen","dispatch","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","e","preventDefault","startLoginEmailPassword","placeholder","autoComplete","onChange","disabled","onClick","src","alt","to","RegisterScreen","msgError","password_repeat","inputValues","handleChangeInput","isFormValid","validator","isEmpty","isEmail","isLength","min","equals","startRegisterUserWithEmailPasswordName","AuthRouter","exact","path","component","addNewNoteService","newNote","title","body","date","Date","getTime","url","collection","add","doc","getNotesService","get","notesSnap","notes","forEach","snapHijo","push","id","data","updateNoteService","noteId","note","update","fileUploadService","file","formData","FormData","append","fetch","method","resp","ok","json","respCloud","secure_url","deleteNoteService","idUsuario","idNote","delete","addNewNote","activeNote","setNotes","startUpdateNote","getState","noteFirebase","updateNote","deleteNote","JournalEntry","fechaNote","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","store","menssage","NothingSelected","NotesAppBar","fecha","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","close","startUploadFile","startDeleteNote","document","querySelector","click","NoteScreen","handChangeInput","activeId","useRef","useEffect","current","JournalScreen","PrivateRouter","isAuthenticate","Component","rest","props","PublicRouter","LoadingScreen","width","height","AppRouter","checking","setchecking","isLoginIn","setisLoginIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4cd5f912.chunk.js","sourcesContent":["import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","export const types = {\n\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New Note',\n    notesActive: '[Notes] Set Active Note',\n    notesLoad: '[Notes] Load Notes',\n    notesUpdated: '[Notes] Update Note',\n    notesDelete: '[Notes] Delete Note',\n    notesFileUrl: '[Notes] Updated Img Url',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n\n\n};","import { types } from \"../types/types\";\n\n\nexport const setError = (error) => {\n\n    return {\n        type: types.uiSetError,\n        payload: error\n    };\n\n};\n\n\nexport const RemoveError = () => {\n    return {\n        type: types.uiRemoveError\n    };\n};\n\n\nexport const startLoading = () => {\n\n    return {\n        type: types.uiStartLoading\n    }\n};\n\nexport const finishLoading = () => {\n\n    return {\n        type: types.uiFinishLoading\n    }\n};","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCjtJ_ucwdoaacMYOUW34Jd3MJA2jt0Yuw\",\n    authDomain: \"react-prueba-ef08c.firebaseapp.com\",\n    databaseURL: \"https://react-prueba-ef08c.firebaseio.com\",\n    projectId: \"react-prueba-ef08c\",\n    storageBucket: \"react-prueba-ef08c.appspot.com\",\n    messagingSenderId: \"839591153214\",\n    appId: \"1:839591153214:web:7d80c2b74b2329ddd60b6f\"\n  };\n  \n  firebase.initializeApp(firebaseConfig);\n\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n};\n","import {firebase, googleAuthProvider} from '../firebase/firebaseConfig';\nimport Swal from 'sweetalert2';\n\n\n\nexport const loginEmailPasswordService = async(email, password) => {\n\n    try {\n        const user = await firebase.auth().signInWithEmailAndPassword(email, password);\n        \n        return user;\n\n    } catch (error) {\n        console.log(error);\n        Swal.fire('Error en Login',error.message,'error');\n    }\n\n}\n\nexport const googleLoginService = async() => {\n\n    try {\n\n        const user = await firebase.auth().signInWithPopup(googleAuthProvider);\n        return user;\n    } catch (error) {\n        console.log(error);\n        Swal.fire('Error en Login',error.message,'error');\n    }\n};\n\nexport const registerUserWithEmailPasswordNameService = async (email, password, nombre) => {\n\n    \n    try {\n        const userCred = await firebase.auth().createUserWithEmailAndPassword(email, password);\n        const user =  await userCred.user;\n    \n        await user.updateProfile({displayName:nombre});\n        const {uid, displayName} = user;\n        return {uid, displayName};   \n        \n    } catch (error) {\n        console.log(error);\n        Swal.fire('Error al registrarse',error.message,'error');\n    }\n}\n\nexport const loguotService = async() => {\n    await firebase.auth().signOut();\n}","\nimport {types} from '../types/types';\nimport { startLoading, finishLoading } from './uiAction';\nimport { \n    loginEmailPasswordService, \n    googleLoginService, \n    loguotService, \n    registerUserWithEmailPasswordNameService \n    } from '../services/authService';\n\n\nexport const startLoginEmailPassword = (email, password) =>{\n    return async(dispatch) => {\n        \n        try {\n\n            dispatch(startLoading());\n            const {user} = await loginEmailPasswordService(email, password);\n            dispatch( login(user.uid, user.displayName) );\n            dispatch( finishLoading() );\n\n        } catch (error) {\n            dispatch(finishLoading());\n        }\n\n    };\n};\n\nexport const startGoogleLogin = () => {\n    return async(dispatch) =>{\n\n        try {\n            \n            const {user} = await  googleLoginService();\n            dispatch( login(user.uid, user.displayName) );\n\n        } catch (error) {\n            \n        }\n    };\n};\n\n\nexport const startRegisterUserWithEmailPasswordName = (email, password, nombre) => {\n    return async(dispatch) => {\n        const {uid,displayName} = await registerUserWithEmailPasswordNameService(email,password, nombre);\n        dispatch( login(uid,displayName) );\n        dispatch(finishLoading());\n    };\n};\n\nexport const startLogout = () => {\n    return async(dispatch) => {\n        await loguotService();\n        dispatch( loguot() );\n    }\n};\n\n\nexport const login = (uid, displayName) => {\n    \n    return {\n        type: types.login,\n        payload : {\n            uid,\n            displayName\n        }\n    };\n};\n\n\nexport const loguot = () => {\n\n    return {\n        type: types.logout\n    }\n\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {useForm} from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {startLoginEmailPassword, startGoogleLogin } from '../../actions/authAction';\n\nexport const LoginScreen = () => {\n\n\n    const dispatch = useDispatch();\n    const {loading} = useSelector(state => state.ui);\n\n    const [formValues, handleInputChange] =  useForm({\n        email: 'nadanada@gmail.com',\n        password: '123456'\n    });\n\n    const {email, password} = formValues;\n\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLoginEmailPassword(email,password));\n    \n    }\n\n    const handlGoogleLogin = () =>{\n        dispatch(startGoogleLogin());\n    }\n\n\n    return (\n        <div className='animate__animated animate__fadeIn'>\n            <h3 className='auth__title'>Login</h3>\n            <form onSubmit={handleLogin} \n            >\n                <input\n                    type='text'\n                    placeholder='email'\n                    name='email'\n                    className='auth__input'\n                    autoComplete='off'\n                    value={email}\n                    onChange={handleInputChange}\n\n                />\n\n                <input\n                    type='password'\n                    placeholder='contraseña'\n                    name='password'\n                    className='auth__input'\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    type='submit'\n                    className='btn btn-primary btn-block'\n                    disabled={ loading }\n                > Entrar </button>\n\n                <hr />\n\n                <div className='auth__social-networks'>\n                    <p>Login with social networks </p>\n                \n                    <div className=\"google-btn\"\n                        onClick={handlGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n                <Link className='link' to='/auth/register' >\n                    Create new account\n                </Link>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { useForm } from '../../hooks/useForm';\nimport { setError, RemoveError } from '../../actions/uiAction';\nimport { startRegisterUserWithEmailPasswordName } from '../../actions/authAction';\n\n\nexport const RegisterScreen = () => {\n\n\n    const dispatch = useDispatch();\n    const {msgError} = useSelector(state => state.ui);\n\n\n    const[inputValues,handleChangeInput] = useForm({\n        nombre : '',\n        email:'',\n        password:'',\n        password_repeat: ''\n    });\n\n    const {nombre, email, password, password_repeat} = inputValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if(  isFormValid() ){\n\n            dispatch(RemoveError());\n\n            dispatch(startRegisterUserWithEmailPasswordName(email,password, nombre));\n\n\n\n        }\n\n    }\n\n    const isFormValid = () => {\n\n        if( validator.isEmpty(nombre)){\n            dispatch( setError('nombre no puede ser vacio'))\n            return false;\n        }else if( ! validator.isEmail(email) ){\n            dispatch( setError('Correo es invalido'))\n            return false;\n        } else if(! validator.isLength(password,{min:6})){\n            dispatch( setError('password debe ser mayor a 6 digito'))\n            return false;\n        }else if(! validator.equals(password, password_repeat) ) {\n            dispatch( setError('la confirmacion del password no coincide'))\n            return false;\n        }\n\n        \n        return true;\n    };\n\n\n    return (\n        <div className='animate__animated animate__fadeIn'>\n            <h3 className='auth__title'>Register</h3>\n            <form onSubmit={handleRegister}>\n\n                {\n                    msgError && \n                    (\n                        <div className='auth__alert-error'>{msgError}</div>\n                    )\n                }\n\n                <input\n                    type='text'\n                    placeholder='nombre'\n                    name='nombre'\n                    className='auth__input'\n                    value={nombre}\n                    onChange={handleChangeInput}\n\n                />\n\n\n                <input\n                    type='text'\n                    placeholder='email'\n                    name='email'\n                    className='auth__input'\n                    value={email}\n                    onChange={handleChangeInput}\n\n                />\n\n                <input\n                    type='password'\n                    placeholder='contraseña'\n                    name='password'\n                    className='auth__input'\n                    value={password}\n                    onChange={handleChangeInput}\n                />\n\n\n                <input\n                    type='password'\n                    placeholder='confirme la contraseña'\n                    name='password_repeat'\n                    className='auth__input'\n                    value={password_repeat}\n                    onChange={handleChangeInput}\n                />\n\n                <button\n                    type='submit'\n                    className='btn btn-primary btn-block mb-5'\n                > Entrar </button>\n\n                <hr />\n\n                <Link className='link' to='/auth/login' >\n                    Already register?\n                </Link>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Route, Redirect, Switch} from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className='auth__main'>\n            <div className='auth__box-container'>\n\n                <Switch>\n\n                    <Route\n                        exact\n                        path='/auth/login'\n                        component={LoginScreen}\n                    />\n                    <Route \n                        exact                  \n                        path='/auth/register'\n                        component={RegisterScreen}\n                    />\n                    <Redirect to='/auth/login' />\n\n                </Switch>\n\n\n            </div>\n        </div>\n    );\n};\n","import { db } from \"../firebase/firebaseConfig\";\n\n\n//journal-app\n\nexport const addNewNoteService = async(uid) => {\n\n    const newNote = {\n        title: '',\n        body: '',\n        date: new Date().getTime(),\n        url:''\n    };\n\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    return {doc, newNote};\n\n}\n\n\nexport const getNotesService = async (uid) => {\n\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n\n    const notes = [];\n\n    notesSnap.forEach(snapHijo => {\n        notes.push({\n            id : snapHijo.id,\n            ...snapHijo.data()\n        });\n    });\n\n    return notes;\n};\n\n\nexport const updateNoteService = async (uid,noteId,note) => {\n\n    await db.doc(`${uid}/journal/notes/${noteId}`).update(note);\n\n};\n\nexport const fileUploadService = async (file) => {\n\n    const url = ' https://api.cloudinary.com/v1_1/dshqlec1e/upload';\n\n    const formData = new FormData();\n    formData.append('upload_preset','journal-app');\n    formData.append('file',file);\n\n    try {\n\n        const resp = await fetch(url,{\n            method:'POST',\n            body: formData\n        });\n\n        if(resp.ok){\n            const respCloud = await resp.json();\n            return respCloud.secure_url;\n        }else{\n            throw await resp.json();\n        }\n        \n    } catch (error) {\n        console.log(error);\n    }\n\n};\n\nexport const deleteNoteService = async(idUsuario, idNote) => {\n\n    await db.doc(`${idUsuario}/journal/notes/${idNote}`).delete();\n\n}\n\n","import { types } from '../types/types';\nimport Swal from 'sweetalert2';\nimport { getNotesService, addNewNoteService, updateNoteService, fileUploadService, deleteNoteService } from '../services/notesService';\n\nexport const startNewNote = () => {\n\n    return async (dispatch, getState) => {\n\n        try {\n\n            const { uid } = getState().auth;\n            const {doc, newNote} = await addNewNoteService(uid);\n\n            newNote.id = doc.id;\n            dispatch(activeNote(newNote));\n            dispatch(addNewNote(newNote));\n\n\n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error al agregar nota', error.menssage, 'error');\n        };\n    };\n};\n\nexport const addNewNote = (note) => ({\n    type: types.notesAddNew,\n    payload:{\n         ...note\n    }\n});\n\n\nexport const activeNote = (note) => {\n\n    return {\n        type: types.notesActive,\n        payload: {\n            ...note\n        }\n    };\n};\n\n\nexport const startLoadNotes = (uid) => {\n\nreturn async (dispatch) =>{\n    const notes = await getNotesService(uid);\n    dispatch( setNotes(notes) );\n}\n\n};\n\n\nexport const setNotes = (notes) => {\n\n    return {\n        type : types.notesLoad,\n        payload: notes\n    }\n\n};\n\nexport const startUpdateNote = (note) => {\n    return async (dispatch, getState) => {\n\n        try {\n\n            const {uid} = getState().auth; \n            const noteFirebase = {...note};\n            delete noteFirebase.id\n    \n            await updateNoteService(uid,note.id,noteFirebase);\n    \n            dispatch(updateNote(note.id, noteFirebase) );\n\n            Swal.fire('Exito','La nota fue actualizada con exito','success');\n\n            \n        } catch (error) {\n            console.log(error);\n            Swal.fire('Error al Actualizar Notas',error.message,'error');\n        }\n\n\n    }\n};\n\n\nexport const updateNote =  (id, note) => {\n\n    return {\n        type: types.notesUpdated,\n        payload: {\n            id,\n            note: {\n                id,\n                ...note\n            }\n        }   \n    }\n};\n\nexport const startUploadFile = (file) => {\n    return async(dispatch, getState) => {\n\n        const {active:activeNote} = getState().notes;\n\n        Swal.fire({\n            title: 'Subiendo Imagen',\n            text: 'Cargando...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        })\n\n        const url = await fileUploadService(file);\n\n        activeNote.url = url;\n\n        dispatch( startUpdateNote(activeNote));\n\n        Swal.close();\n\n    };\n};\n\nexport const startDeleteNote = (id) => {\n    return async(dispatch, getState) => {\n    \n        const uid = getState().auth.uid;\n        try {\n\n            await deleteNoteService(uid,id);\n            dispatch( deleteNote(id));\n\n            Swal.fire('Eliminando Notas', 'Notas Eliminada con exito','success');\n\n        } catch (error) {\n            console.log(error);    \n        }\n\n    };\n};\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\n\nexport const purgeNotesLogout = () =>({\n    type: types.notesLogoutCleaning,\n}); ","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notesAction';\n\nexport const JournalEntry = (note) => {\n\n    const {title, body, date, url} = note;\n\n    const fechaNote = moment(date);\n    const dispatch = useDispatch();\n\n    const handlenNote = () => {\n\n        dispatch( activeNote(note));\n        \n    };\n\n    return (\n        <div className='journal__entry pointer animate__animated animate__fadeInDownBig' onClick={handlenNote}>\n            {\n                url &&\n                <div\n                style={{ \n                    backgroundSize:'cover',\n                    backgroundImage: `url(${url})`\n                 }} \n                className='journal__entry-picture'\n                ></div>\n            }\n\n            <div className='journal__entry-body'>\n                <p className='journal__entry-title'>\n                    {title}\n                </p>\n                <p className='journal__entry-content'>\n                    {body}\n                </p>\n            </div>\n\n            <div className='journal__entry-date-box'>\n                <span>{fechaNote.format('dddd')}</span>\n                <h4>{fechaNote.format('Do')}</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry';\nimport { useSelector } from 'react-redux';\n\nexport const JournalEntries = () => {\n\n\n    const {notes} = useSelector(state => state.notes);\n\n    return (\n        <div className='journal__entries'>\n\n            {\n                notes.map(note => (\n                    <JournalEntry \n                    key={note.id} \n                    {...note} \n                    />\n                ))\n            }\n              \n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntries } from './JournalEntries';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/authAction';\nimport { startNewNote, purgeNotesLogout } from '../../actions/notesAction';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const {name} = useSelector(store => store.auth);\n\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n        dispatch( purgeNotesLogout());\n    };\n\n    const handleAddNew = () => {\n        dispatch( startNewNote() );\n    }\n\n    return (\n        <div>\n            <aside className='journal__sidebar'>\n                <div className='journal__sidebar-navbar'>\n                    <h3 className='far fa-moon'>\n                        <span>{name}</span>\n                    </h3>\n\n                    <button \n                        className='btn'\n                        onClick={handleLogout}\n\n                    >\n                        Logout\n                    </button>\n                </div>\n\n                <div className='journal__rew-entry'\n                    onClick = {handleAddNew}\n                >\n                    <i className=\"fas fa-calendar-plus fa-5x\"></i>\n                    <p className='mt-5'>\n                        new entry\n                    </p>\n                </div>\n\n                <JournalEntries />\n\n\n            </aside>\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className='nothing__main-content'>\n            \n            <p>\n                Select Something\n                <br />\n                pr create an entry !\n            </p>\n\n            <i className=\"fas fa-star fa-4x\"></i>\n        </div>\n    );\n};\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startUpdateNote, startUploadFile, startDeleteNote } from '../../actions/notesAction';\n\n\nexport const NotesAppBar = ({date}) => {\n\n    const fecha = moment(date);\n\n    const dispatch = useDispatch();\n    const {active} = useSelector(state => state.notes)\n\n    const handleNoteSave = () => {\n        dispatch( startUpdateNote(active));\n    };\n\n    const handledPictureChange = (e) => {\n        const file = e.target.files[0];\n        if( file ){\n            dispatch( startUploadFile(file));\n        }\n    };\n\n    const handleDeleteNote =  () => {\n        const id = active.id;\n        dispatch( startDeleteNote(id));\n    }\n\n\n    const handlePictureUpload = () => {\n        document.querySelector('#inputUpload').click();\n    }\n\n    return (\n        <div className='notes__appbar animate__animated  animate__fadeIn'>\n            <span>{fecha.format('MMMM Do YYYY')}</span>\n\n            <input \n                type='file' \n                id='inputUpload' \n                name='file' \n                style={{display:'none'}}\n                onChange={handledPictureChange}\n            />\n            \n            <div>\n\n                <button \n                    className='btn'\n                    onClick={handleDeleteNote}\n                    title='Eliminar'\n                    >\n                        <i className='fas fa-trash-alt fa-2x'></i>    \n                    </button>\n\n                <button \n                    className='btn'\n                    onClick={handlePictureUpload}\n                    title='subir imagen'\n                >\n                    <i className='fas fa-image fa-2x'></i> \n                </button>\n\n                <button \n                className='btn'\n                onClick = {handleNoteSave}\n                title='Guardar'\n                >\n                    <i className='fas fa-save fa-2x'></i> \n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useRef, useEffect } from 'react'\nimport { NotesAppBar } from './NotesAppBar'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote} from '../../actions/notesAction';\n\nexport const NoteScreen = () => {\n\n    const {active:note} = useSelector(state => state.notes);\n    const dispatch = useDispatch();\n\n    const [inputValues,handChangeInput,reset] = useForm(note);\n\n    const activeId =  useRef(note.id);\n\n\n    useEffect(() => {\n\n        if( note.id !== activeId.current ){\n            reset(note);\n            activeId.current = note.id\n        }\n       \n    }, [note,reset]);\n\n    useEffect(() => {\n        dispatch( activeNote({...inputValues}) );\n\n    }, [inputValues,dispatch]);\n\n\n    return (\n        <div className='note__main-content  animate__animated  animate__fadeIn'> \n            <NotesAppBar date={inputValues.date} />\n\n            <div className='notes__content'>\n                <input\n                    type='text'\n                    placeholder='Some awesome title'\n                    className='notes__title-input'\n                    autoComplete='off'\n                    value={inputValues.title}\n                    name='title'\n                    onChange={handChangeInput}\n                />\n                <textarea \n                    placeholder='what happend today'\n                    className='notes__textarea'\n                    value={inputValues.body}\n                    name='body'\n                    onChange={handChangeInput}\n                    >\n                </textarea>\n\n                <div className='notes__image'>\n                    <img \n                        src={note.url}\n                        alt={note.url}\n\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\nimport {NoteScreen} from '../notes/NoteScreen'\n\nexport const JournalScreen = () => {\n\n\n    const {active} = useSelector(state => state.notes);\n\n\n    return (\n        <div className='journal__main-content animate__animated  animate__fadeIn'>\n            <Sidebar />\n\n            <main>\n                {\n                    (active)\n                    ? ( <NoteScreen /> )\n                    :  (<NothingSelected />)\n                }\n\n            </main>\n        </div>\n    );\n};\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport const PrivateRouter = ({isAuthenticate,component:Component,...rest}) => {\n    return (\n        <Route\n            {...rest}\n            component = {\n                (props) => (\n                    (isAuthenticate)\n                    ? ( <Component {...props} /> )\n                    : (<Redirect to='/auth' />) \n                )\n            }\n        />\n    );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRouter = ({isAuthenticate, component:Component, ...rest}) => {\n    return (\n        <Route \n            {...rest}\n            component ={ (props) => (\n                (! isAuthenticate)\n                ? ( <Component {...props} /> )\n                : (<Redirect to='/' />)\n            )}\n        />\n    )\n}\n","import React from 'react'\n\nexport const LoadingScreen = () => {\n    return (\n\n        <div className=\"\" style={{width:'100%', height:'100%'}}>\n            <img src='/img/loading.gif' alt='loading.gif' />\n        </div>\n    );\n};","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { firebase } from '../firebase/firebaseConfig';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/authAction';\nimport { PrivateRouter } from './PrivateRouter';\nimport { PublicRouter } from './PublicRouter';\nimport { startLoadNotes } from '../actions/notesAction';\nimport { LoadingScreen } from '../components/ui/LoadingScreen';\n\n\nexport const AppRouter = () => {\n\n\n    const dispatch = useDispatch();\n\n    const [checking, setchecking] = useState(true);\n    const [isLoginIn, setisLoginIn] = useState(false);\n\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName));\n                setisLoginIn(true);\n                dispatch(startLoadNotes(user.uid));\n            }\n            else {\n                setisLoginIn(false);\n            }\n\n            setchecking(false);\n        });\n\n    }, [dispatch, setchecking, setisLoginIn]);\n\n\n    if(checking) {\n        return(\n            <LoadingScreen />\n        );\n    }\n    return (\n\n        <Router>\n\n            <div>\n\n                <Switch>\n                    <PublicRouter\n                        isAuthenticate={isLoginIn}\n                        path='/auth'\n                        component={AuthRouter}\n                    />\n                    <PrivateRouter\n                        isAuthenticate={isLoginIn}\n                        path='/'\n                        component={JournalScreen}\n                    />\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import {types} from '../types/types'\n\n\nconst initialState = {\n    loading : false,\n    msgError: null\n};\n\n\nexport const uiReducer = (state=initialState, action) => {\n\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n\n        case types.uiRemoveError:\n            \n            return{\n                ...state,\n                msgError:null\n            }\n\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n    \n        default:\n            return state;\n    }\n\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    notes: [],\n    active: null\n};\n\nexport const notesReducer = (state=initialState, action) => {\n\n\n    switch (action.type) {\n        \n        case types.notesActive:\n            return {\n                ...state,\n                active:{\n                    ...action.payload\n                }\n                \n            };\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n\n            }\n\n        case types.notesLoad:\n            return{\n                ...state,\n                notes:[...action.payload]\n            }\n\n        case types.notesUpdated :\n\n        return {\n            ...state,\n            notes : state.notes.map( \n                note => note.id === action.payload.id\n                ? ( action.payload.note )\n                : ( note )\n            )\n        }\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(note => note.id !== action.payload  ) \n            }\n\n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes:[]\n            }\n        \n        default:\n            return state;\n    }\n    \n}\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes : notesReducer,\n});\n\nexport const store = createStore(\n    reducers,\n   composeEnhancers(\n       applyMiddleware(thunk)\n   )\n    );","import {types} from '../types/types'\n\n\n\nexport const authReducer = (state={}, action) => {\n\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n        case types.logout:\n            return {}\n    \n        default:\n            return state;\n    };\n\n};","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\nimport './styles/styles.scss';\n\nexport const JournalApp = () => {\n    return (\n\n        <Provider store={store} >\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { JournalApp } from './JournalApp';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}